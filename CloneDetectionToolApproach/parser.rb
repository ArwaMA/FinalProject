#! /usr/bin/env ruby

## This class parses the report generated by NiCad and creates objects of type cloneTool.

load "clonetool.rb"

class Parser

	def parsexmlfile(content, clonedata)

		regnline = /(?<=nlines=\\\")[\d]+/
		regsim = /(?<=similarity=\\\")[\d]+/
		regs = /(?<=source file=\\\")[\w\s\/\.\-\_]+/
		regstart = /(?<=startline=\\\")[\d]+/
		regend = /(?<=endline=\\\")[\d]+/

		eachclone = content.split("</clone>") ##takes each clone
		i = 0
		while i < eachclone.size-1  do
			str = eachclone[i]
			donorhostclone = str.split("</source>") ##splits the donor and the host
			donor = donorhostclone[0]
			nlines = donor.scan(regnline)
			sim = donor.scan(regsim)
			dsourcefile = donor.scan(regs)
			dstart = donor.scan(regstart)
			dend = donor.scan(regend)
			host = donorhostclone[1]
			hsourcefile = host.scan(regs)
			hstart = host.scan(regstart)
			hend = host.scan(regend)
			clone = CloneTool.new(nlines, sim, dsourcefile, dstart, dend, hsourcefile, hstart, hend)
			clonedata.push(clone)
			i = i + 1
		end
	end
end
